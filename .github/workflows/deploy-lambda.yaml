# Pipeline para Lambda
name: Deploy Lambda Function

on:
  push:
    branches:
      - main # é a unica que tem, mas provavelmente será outra

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: Terraform Execution
        run: |
          terraform init
          terraform validate
          terraform plan
          terraform apply -auto-approve

      # Terraform destroy
      - name: Terraform Destroy
        if: always()
        run: |
          terraform destroy -auto-approve

      # - name: Deploy or Update AWS Lambda
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #   run: |
      #     FUNCTION_NAME="postech-lambda-function"
      #     REGION="us-east-1"
      #     ZIP_FILE="deployment-package.zip"
      #     ROLE_ARN="arn:aws:iam::180294201352:role/github-actions-lambda-role"
      #     HANDLER="src/services/authorizers/findByCPF.handler"
      #     RUNTIME="nodejs18.x"

      #     echo "Checking if function exists..."
      #     if aws lambda get-function --function-name $FUNCTION_NAME --region $REGION > /dev/null 2>&1; then
      #       echo "Function exists. Updating the code..."
      #       aws lambda update-function-code \
      #         --function-name $FUNCTION_NAME \
      #         --zip-file fileb://$ZIP_FILE
      #     else
      #       echo "Function does not exist. Creating the function..."
      #       aws lambda create-function \
      #         --function-name $FUNCTION_NAME \
      #         --region $REGION \
      #         --runtime $RUNTIME \
      #         --role $ROLE_ARN \
      #         --handler $HANDLER \
      #         --zip-file fileb://$ZIP_FILE
      #     fi
